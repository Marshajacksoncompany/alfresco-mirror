<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="alfresco.patch">

    <!--                -->
    <!-- Type Defs      -->
    <!--                -->
    
    <typeAlias alias="Ids" type="org.alfresco.ibatis.IdsEntity"/>

    <!--                -->
    <!-- Result Maps    -->
    <!--                -->
    
    <resultMap id="result_admOldContentProp" class="java.util.HashMap">
        <result property="nodeId" column="node_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="qnameId" column="qname_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="listIndex" column="list_index" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result property="localeId" column="locale_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="stringValue" column="string_value" jdbcType="VARCHAR" javaType="java.lang.String"/>
    </resultMap>
    
    <resultMap id="result_authoritiesAndCrc" class="java.util.HashMap">
        <result property="authority" column="authority" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="crc" column="crc" jdbcType="BIGINT" javaType="java.lang.Long"/>
    </resultMap>
    
    <resultMap id="result_childAssocsForCrc" class="java.util.HashMap">
        <result property="id" column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="typeQNameId" column="type_qname_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="qnameNamespaceId" column="qname_ns_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="qnameLocalName" column="qname_localname" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="childNodeNameCrc" column="child_node_name_crc" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="qnameCrc" column="qname_crc" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="childNodeUuid" column="child_node_uuid" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="childNodeName" column="child_node_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
    </resultMap>
    
    <resultMap id="result_nodeIdAndName" class="java.util.HashMap">
        <result property="id" column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="name" column="name" jdbcType="VARCHAR" javaType="java.lang.String"/>
    </resultMap>
    
    <!--                -->
    <!-- Parameter Maps -->
    <!--                -->
    
    <parameterMap id="parameter_admNewContentProp" class="map">
        <parameter property="longValue" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <parameter property="nodeId" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <parameter property="qnameId" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <parameter property="listIndex" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <parameter property="localeId" jdbcType="BIGINT" javaType="java.lang.Long"/>
    </parameterMap>
    
    <parameterMap id="parameter_contentMimetype" class="map">
        <parameter property="newMimetypeId" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <parameter property="oldMimetypeId" jdbcType="BIGINT" javaType="java.lang.Long"/>
    </parameterMap>
    
    <parameterMap id="parameter_childAssocCrcs" class="map">
        <parameter property="childNodeNameCrc" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <parameter property="qnameCrc" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <parameter property="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
    </parameterMap>
    
    <parameterMap id="parameter_nodeTypeAndNamePattern" class="map">
        <parameter property="typeQNameId" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <parameter property="propQNameId" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <parameter property="namePattern" jdbcType="VARCHAR" javaType="java.lang.String"/>
    </parameterMap>
    
    <!--                -->
    <!-- Selects        -->
    <!--                -->

    <select id="select_avmMaxNodeId" resultClass="java.lang.Long">
        select max(id) from avm_nodes
    </select>

    <select id="select_admMaxNodeId" resultClass="java.lang.Long">
        select max(id) from alf_node
    </select>
    
    <select id="select_avmNodesWithOldContentProperties" parameterClass="Ids" resultClass="java.lang.Long">
        <![CDATA[
        select
            id
        from
            avm_nodes
        where
            id >= #idOne#
            and id < #idTwo#
            and class_type = 'plainfile'
            and content_url is not null
            and content_url not like 'id:%'
        order by
            id ASC
        ]]>
    </select>

    <select id="select_admOldContentProperties" parameterClass="Ids" resultMap="result_admOldContentProp">
        <![CDATA[
        select
            node_id,
            qname_id,
            list_index,
            locale_id,
            string_value
        from
            alf_node_properties
        where
            node_id >= #idOne#
            and node_id < #idTwo#
            and actual_type_n = 11
        order by
            node_id ASC
        ]]>
    </select>

    <select id="select_authoritiesAndCrc" resultMap="result_authoritiesAndCrc">
        select
            authority,
            crc
        from
            alf_authority
    </select>

    <select id="select_allChildAssocsCount" resultClass="java.lang.Integer">
        select count(*) from alf_child_assoc
    </select>

    <select id="select_allChildAssocsForCrcs" parameterClass="Ids" resultMap="result_childAssocsForCrc">
        <![CDATA[
        select
            ca.id,
            ca.type_qname_id,
            ca.qname_ns_id,
            ca.qname_localname,
            ca.child_node_name_crc,
            ca.qname_crc,
            cn.uuid as child_node_uuid,
            cnp.string_value as child_node_name
        from
            alf_child_assoc ca
            join alf_node cn on (cn.id = ca.child_node_id)
            left join alf_node_properties cnp on (cnp.node_id = cn.id and cnp.qname_id = #idOne#)
        where
            ca.id > #idTwo#
        ]]>
    </select>

    <select id="select_nodesByTypeAndNamePattern" parameterMap="parameter_nodeTypeAndNamePattern" resultMap="result_nodeIdAndName">
        select
            s.protocol,
            s.identifier,
            n.uuid,
            np.string_value as name
        from
            alf_node n
            join alf_store s on (s.id = n.store_id)
            join alf_node_properties np on (np.node_id = n.id)
        where
            n.type_qname_id = #typeQNameId# and
            np.qname_id = #propQNameId# and
            np.string_value like #namePattern#
    </select>

    <!--                -->
    <!-- Updates        -->
    <!--                -->
    
    <update id="update_admOldContentProperty" parameterMap="parameter_admNewContentProp">
        update
            alf_node_properties
        set
            actual_type_n = 21,
            persisted_type_n = 3,
            long_value = ?,
            string_value = null
        where
            node_id = ?
            and qname_id = ?
            and list_index = ?
            and locale_id = ?
    </update>
    
    <update id="update_contentMimetypeId" parameterMap="parameter_contentMimetype">
        update
            alf_content_data
        set
            content_mimetype_id = ?
        where
            content_mimetype_id = ?
    </update>
    
    <update id="update_childAssocCrc" parameterMap="parameter_childAssocCrcs">
        update
            alf_child_assoc
        set
            qname_crc = ?,
            child_node_name_crc = ?
        where
            id = ?
    </update>

</sqlMap>