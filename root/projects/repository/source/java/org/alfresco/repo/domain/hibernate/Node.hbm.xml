<?xml version='1.0' encoding='UTF-8'?>

<!DOCTYPE hibernate-mapping PUBLIC
    '-//Hibernate/Hibernate Mapping DTD 3.0//EN' 
    'http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd'>

<hibernate-mapping>

   <class
         name="org.alfresco.repo.domain.hibernate.StoreImpl"
         proxy="org.alfresco.repo.domain.Store"
         table="alf_store"
         dynamic-update="false"
         dynamic-insert="false"
         select-before-update="false"
         optimistic-lock="none" >
      <!-- auto-generated ID -->
      <id name="id" column="id" type="long" >
         <generator class="native" />
      </id>
      <!-- Protocol and Identifier must be unique -->
      <natural-id mutable="true">
         <property name="protocol" column="protocol" type="string" length="50" not-null="true" />
         <property name="identifier" column="identifier" type="string" length="100" not-null="true" />
      </natural-id>
      <!-- Optimistic locking -->
      <version column="version" name="version" type="long" />
      <!-- forward assoc to root node -->
      <many-to-one
            name="rootNode"
            not-null="true"
            foreign-key="fk_alf_store_root"
            lazy="proxy"
            class="org.alfresco.repo.domain.hibernate.NodeImpl"
            fetch="select" >
         <column name="root_node_id" />
      </many-to-one>
   </class>
   
   <class
         name="org.alfresco.repo.domain.hibernate.NodeImpl"
         proxy="org.alfresco.repo.domain.Node"
         table="alf_node"
         dynamic-update="false"
         dynamic-insert="false"
         select-before-update="false" 
         lazy="true" 
         optimistic-lock="none"  >
      <!-- auto-generated ID -->
      <id name="id" column="id" type="long" >
         <generator class="native" />
      </id>
      <!-- Store and UUID must be unique -->
      <natural-id mutable="true">
         <!-- forward assoc to store -->
         <many-to-one
               name="store"
               class="org.alfresco.repo.domain.hibernate.StoreImpl"
               column="store_id"
               not-null="true"
               foreign-key="fk_alf_node_store"
               lazy="proxy"
               fetch="select" />
         <!-- the store-unique identifier -->
         <property name="uuid" column="uuid" type="string" length="36" />
      </natural-id>
      <!-- Optimistic locking -->
      <version column="version" name="version" type="long" />
      
      <!-- forward assoc to Transaction -->
      <many-to-one
            name="transaction"
            class="org.alfresco.repo.domain.hibernate.TransactionImpl"
            column="transaction_id"
            foreign-key="fk_alf_node_txn"
            lazy="proxy"
            fetch="select"
            unique="false"
            not-null="true"
            cascade="none" />
      <!-- Keep track of the node even once it dies -->
      <property name="deleted" column="node_deleted" type="boolean" not-null="true" index="idx_alf_node_del"/>
      <!-- Node type QName (mandatory) -->
      <property name="typeQNameId" column="type_qname_id" type="long" not-null="true" />  <!-- fk_alf_node_tqn -->
      <!-- Access control list (optional) -->
      <property name="aclId" column="acl_id" type="long" not-null="false" />  <!-- fk_alf_node_acl -->
      <!-- forward assoc to properties -->
      <map
            name="properties" 
            table="alf_node_properties"
            lazy="false"
            fetch="join"
            sort="unsorted"
            inverse="false" 
            optimistic-lock="false"
            cascade="delete" >
         <key column="node_id" foreign-key="fk_alf_nprop_n" not-null="true" />
         <composite-map-key class="org.alfresco.repo.domain.node.NodePropertyKey">
             <key-property name="qnameId" column="qname_id" type="long" />
             <key-property name="listIndex" column="list_index" type="int" />
             <key-property name="localeId" column="locale_id" type="long" />
         </composite-map-key>
         <composite-element class="org.alfresco.repo.domain.node.NodePropertyValue" >
            <property name="actualType" column="actual_type_n" type="integer" not-null="true" />
            <property name="persistedType" column="persisted_type_n" type="integer" not-null="true" />
            <property name="booleanValue" column="boolean_value" type="boolean" />
            <property name="longValue" column="long_value" type="long" />
            <property name="floatValue" column="float_value" type="float" />
            <property name="doubleValue" column="double_value" type="double" />
            <property name="stringValue" column="string_value" type="string" length="1024"/>
            <property name="serializableValue" column="serializable_value" type="serializable" length="16384"/>
         </composite-element>
      </map>
      <!-- cm:auditable properties -->
      <component name="auditableProperties" class="org.alfresco.repo.domain.AuditableProperties" optimistic-lock="false">
         <property name="auditCreator" column="audit_creator" type="string" length="255" not-null="false"/>
         <property name="auditCreated" column="audit_created" type="string" length="30" not-null="false"/>
         <property name="auditModifier" column="audit_modifier" type="string" length="255" not-null="false"/>
         <property name="auditModified" column="audit_modified" type="string" length="30" not-null="false"/>
         <property name="auditAccessed" column="audit_accessed" type="string" length="30" not-null="false"/>
      </component>
   </class>

   <class
         name="org.alfresco.repo.domain.hibernate.ChildAssocImpl"
         proxy="org.alfresco.repo.domain.ChildAssoc"
         dynamic-insert="false"
         dynamic-update="false"
         lazy="true"
         optimistic-lock="none"
         table="alf_child_assoc" >
      <!-- auto-generated ID -->
      <id name="id" column="id" type="long" >
         <generator class="native" />
      </id>
      <natural-id mutable="true">
         <!-- forward assoc to parent node -->
         <many-to-one 
               name="parent"
               class="org.alfresco.repo.domain.hibernate.NodeImpl"
               lazy="proxy"
               foreign-key="fk_alf_cass_pnode"
               fetch="select"
               optimistic-lock="false"
               not-null="true" >
            <column name="parent_node_id" not-null="true" />
         </many-to-one>
         <property name="typeQNameId" column="type_qname_id" type="long" not-null="true" />  <!-- fk_alf_cass_tqn -->
         <property name="childNodeNameCrc" column="child_node_name_crc" type="long" not-null="true" />
         <property name="childNodeName" column="child_node_name" type="string" length="50" not-null="true" />
      </natural-id>
      <!-- Optimistic locking -->
      <version column="version" name="version" type="long" />
      <!-- forward assoc to child node -->
      <many-to-one
            name="child" 
            lazy="proxy"
            foreign-key="fk_alf_cass_cnode"
            fetch="select"
            class="org.alfresco.repo.domain.hibernate.NodeImpl"
            optimistic-lock="false"
            not-null="true" >
         <column name="child_node_id" not-null="true"/>
      </many-to-one>
      <property name="qnameNamespaceId" column="qname_ns_id" type="long" not-null="true" />  <!-- fk_alf_cass_qnns -->
      <property name="qnameLocalName" column="qname_localname" type="string" length="255" not-null="true" />
      <property name="qnameCrc" column="qname_crc" type="long" not-null="true"/>
      <property name="isPrimary" column="is_primary" />
      <property name="index" column="assoc_index" />
   </class>

   <query name="store.GetStoreByAll">
      select
         store
      from 
         org.alfresco.repo.domain.hibernate.StoreImpl as store
         join store.rootNode
      where
         store.protocol = :protocol and
         store.identifier = :identifier
   </query>
   
   <query name="node.GetParentAssocs">
      select
         assoc,
         parent
      from
         org.alfresco.repo.domain.hibernate.ChildAssocImpl as assoc
         join assoc.parent as parent
      where
         assoc.child.id = :childId
   </query>
   
   <query name="node.DeleteParentAssocs">
      delete
      from
         org.alfresco.repo.domain.hibernate.ChildAssocImpl as assoc
      where
         assoc.child.id = :childId
   </query>
   
   <query name="node.DeleteChildAssocs">
      delete
      from
         org.alfresco.repo.domain.hibernate.ChildAssocImpl as assoc
      where
         assoc.parent.id = :parentId
   </query>
   
   <query name="node.GetChildAssocs">
      select
         assoc
      from
         org.alfresco.repo.domain.hibernate.ChildAssocImpl as assoc
      where
         assoc.parent.id = :parentId
      order by
         assoc.index,
         assoc.id
   </query>
   
   <query name="node.GetDeletedNodesByMaxTxnId">
      <![CDATA[
      select
         node.id,
         node.store.protocol,
         node.store.identifier,
         node.uuid
      from
         org.alfresco.repo.domain.hibernate.NodeImpl as node
         join node.transaction as txn
      where
         node.id >= :minNodeId and
         node.deleted = true and
         txn.id <= :maxTxnId
      order by
         node.id asc
      ]]>
   </query>

</hibernate-mapping>
